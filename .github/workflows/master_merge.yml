name: Release Workflow
on:
  push:
    branches:
      - master
permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # This is required for actions/checkout
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1000
          fetch-tags: true
      - name: Generate Semantic Version
        id: pr-version
        uses: paulhatch/semantic-version@v5.4.0
        with:
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}"
          namespace: remix-app
          enable_prerelease_mode: true
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::554509907436:role/gha-role
          role-session-name: "gha-pr-build"
          aws-region: us-east-1
      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Build with Node
        run: npm run build
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: jaybyrrd/soapinsuds
      # - name: Login to ECR Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: 554509907436.dkr.ecr.us-east-1.amazonaws.com
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.jvm
          push: false
          tags: ${{ steps.login-ecr.outputs.registry }}/remix-app:${{steps.pr-version.outputs.version_tag}}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Git Tag and Push
        id: git-tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{steps.pr-version.outputs.version_tag}}"
